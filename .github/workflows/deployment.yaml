name: build & deploy

on:
  push:
    branches:
      - "develop"
      - "main"
      - "master"
  pull_request:
    branches:
      - "develop"
      - "main"
      - "master"
  workflow_dispatch:

jobs:
  terraform_container_registry:
    name: Terraform Sample Project Deployment
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    defaults:
      run:
        working-directory: infrastructure/all
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
      - name: Terraform Init
        run: |
          terraform init --backend-config="access_key=${{env.AWS_ACCESS_KEY_ID}}" --backend-config="secret_key=${{env.AWS_SECRET_ACCESS_KEY}}"
      - name: Terraform plan
        run: |
          terraform plan
      - name: Terraform Apply
        run: |
          terraform apply -auto-approve
      - name: Get Outputs
        run: |
          terraform output -json > tf-all-output.json
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.REPO_NAME}}
          IMAGE_TAG: "latest"

        run: |
          pwd
          cd ~
          pwd
          cd ..
          cd ..
          #cd /home/runner/work/eksdemoapp/eksdemoapp/
          # Build a docker container and push it to ECR 
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          echo "Pushing image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"